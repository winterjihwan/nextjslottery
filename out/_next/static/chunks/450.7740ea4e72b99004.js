"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[450],{96450:function(t,e,r){r.r(e),r.d(e,{MetamaskAdapter:function(){return B}});var n=r(4942),i=r(92003),a=r.n(i),o=r(95844),s=r(13631),c=r(20917),l=r(96245),h=r(2043),d=r.n(h);let p={EIP155:"eip155",SOLANA:"solana",OTHER:"other"},m={EIP155:"eip155",SOLANA:"solana",MULTICHAIN:"multichain"},u=t=>{if(t===p.EIP155||t===p.SOLANA)return 1;throw Error(`Chain namespace ${t} is not supported`)},E=t=>{let e=p.EIP155;return 1===t?{chainNamespace:e,chainId:"0x1",rpcTarget:"https://rpc.ankr.com/eth",displayName:"Ethereum Mainnet",blockExplorer:"https://etherscan.io/",ticker:"ETH",tickerName:"Ethereum"}:3===t?{chainNamespace:e,chainId:"0x3",rpcTarget:"https://rpc.ankr.com/eth_ropsten",displayName:"Ropsten Testnet",blockExplorer:"https://ropsten.etherscan.io/",ticker:"ETH",tickerName:"Ethereum"}:4===t?{chainNamespace:e,chainId:"0x4",rpcTarget:"https://rpc.ankr.com/eth_rinkeby",displayName:"Rinkeby Testnet",blockExplorer:"https://rinkeby.etherscan.io/",ticker:"ETH",tickerName:"Ethereum"}:5===t?{chainNamespace:e,chainId:"0x5",rpcTarget:"https://rpc.ankr.com/eth_goerli",displayName:"Goerli Testnet",blockExplorer:"https://goerli.etherscan.io/",ticker:"ETH",tickerName:"Ethereum"}:137===t?{chainNamespace:e,chainId:"0x89",rpcTarget:"https://rpc.ankr.com/polygon",displayName:"Polygon Mainnet",blockExplorer:"https://polygonscan.com",ticker:"MATIC",tickerName:"Polygon"}:80001===t?{chainNamespace:e,chainId:"0x13881",rpcTarget:"https://rpc.ankr.com/polygon_mumbai",displayName:"Polygon Mumbai Testnet",blockExplorer:"https://mumbai.polygonscan.com/",ticker:"MATIC",tickerName:"Polygon"}:56===t?{chainNamespace:e,chainId:"0x38",rpcTarget:"https://rpc.ankr.com/bsc",displayName:"Binance SmartChain Mainnet",blockExplorer:"https://bscscan.com",ticker:"BNB",tickerName:"Binance SmartChain"}:97===t?{chainNamespace:e,chainId:"0x61",rpcTarget:"https://rpc.ankr.com/bsc_testnet_chapel",displayName:"Binance SmartChain Testnet",blockExplorer:"https://testnet.bscscan.com",ticker:"BNB",tickerName:"Binance SmartChain"}:25===t?{chainNamespace:e,chainId:"0x19",rpcTarget:"https://rpc.cronos.org",displayName:"Cronos Mainnet",blockExplorer:"https://cronoscan.com/",ticker:"CRO",tickerName:"Cronos"}:338===t?{chainNamespace:e,chainId:"0x152",rpcTarget:"https://rpc-t3.cronos.org/",displayName:"Cronos Testnet",blockExplorer:"https://cronoscan.com/",ticker:"CRO",tickerName:"Cronos"}:8217===t?{chainNamespace:e,chainId:"0x2019",rpcTarget:"https://public-node-api.klaytnapi.com/v1/cypress",displayName:"Klaytn Mainnet",blockExplorer:"https://scope.klaytn.com",ticker:"KLAY",tickerName:"Klaytn"}:null},g=t=>{let e=p.SOLANA;return 1===t?{chainNamespace:e,chainId:"0x1",rpcTarget:"https://rpc.ankr.com/solana",displayName:"Solana Mainnet",blockExplorer:"https://explorer.solana.com",ticker:"SOL",tickerName:"Solana"}:2===t?{chainNamespace:e,chainId:"0x2",rpcTarget:"https://api.testnet.solana.com",displayName:"Solana Testnet",blockExplorer:"https://explorer.solana.com?cluster=testnet",ticker:"SOL",tickerName:"Solana"}:3===t?{chainNamespace:e,chainId:"0x3",rpcTarget:"https://api.devnet.solana.com",displayName:"Solana Devnet",blockExplorer:"https://explorer.solana.com?cluster=devnet",ticker:"SOL",tickerName:"Solana"}:null},C=(t,e)=>{if(t===p.OTHER)return null;let r=e?"number"==typeof e?e:parseInt(e,16):u(t);return t===p.EIP155?E(r):t===p.SOLANA?g(r):null};class N extends s.s{constructor(t,e){super(e),(0,n.Z)(this,"code",void 0),(0,n.Z)(this,"message",void 0),this.code=t,this.message=e||"",Object.defineProperty(this,"name",{value:"Web3AuthError"})}toJSON(){return{name:this.name,code:this.code,message:this.message}}toString(){return JSON.stringify(this.toJSON())}}class f extends N{constructor(t,e){super(t,e),Object.defineProperty(this,"name",{value:"WalletInitializationError"})}static fromCode(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"";return new f(t,`${f.messages[t]}, ${e}`)}static notFound(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return f.fromCode(5001,t)}static notInstalled(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return f.fromCode(5002,t)}static notReady(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return f.fromCode(5003,t)}static windowBlocked(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return f.fromCode(5004,t)}static windowClosed(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return f.fromCode(5005,t)}static incompatibleChainNameSpace(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return f.fromCode(5006,t)}static duplicateAdapterError(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return f.fromCode(5007,t)}static invalidProviderConfigError(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return f.fromCode(5008,t)}static providerNotReadyError(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return f.fromCode(5009,t)}static rpcConnectionError(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return f.fromCode(5010,t)}static invalidParams(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return f.fromCode(5011,t)}static invalidNetwork(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return f.fromCode(5013,t)}}(0,n.Z)(f,"messages",{5e3:"Custom",5001:"Wallet is not found",5002:"Wallet is not installed",5003:"Wallet is not ready yet",5004:"Wallet window is blocked",5005:"Wallet window has been closed by the user",5006:"Incompatible chain namespace provided",5007:"Adapter has already been included",5008:"Invalid provider Config",5009:"Provider is not ready yet",5010:"Failed to connect with rpc url",5011:"Invalid params passed in",5013:"Invalid network provided"});class w extends N{constructor(t,e){super(t,e),Object.defineProperty(this,"name",{value:"WalletLoginError"})}static fromCode(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"";return new w(t,`${w.messages[t]}${e}`)}static connectionError(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return w.fromCode(5111,t)}static disconnectionError(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return w.fromCode(5112,t)}static notConnectedError(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return w.fromCode(5113,t)}static popupClosed(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return w.fromCode(5114,t)}}function y(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter(function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable})),r.push.apply(r,n)}return r}function v(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?y(Object(r),!0).forEach(function(e){(0,n.Z)(t,e,r[e])}):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):y(Object(r)).forEach(function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))})}return t}(0,n.Z)(w,"messages",{5e3:"Custom",5111:"Failed to connect with wallet",5112:"Failed to disconnect from wallet",5113:"Wallet is not connected",5114:"Wallet popup has been closed by the user"});let O={OPENLOGIN:"openlogin",WALLET_CONNECT_V1:"wallet-connect-v1",WALLET_CONNECT_V2:"wallet-connect-v2"},k=v({TORUS_SOLANA:"torus-solana",PHANTOM:"phantom",SOLLET:"sollet",SOLLET_EXTENSION:"sollet-extension",SOLFLARE:"solflare",SLOPE:"slope"},O),T=v({TORUS_EVM:"torus-evm",METAMASK:"metamask",COINBASE:"coinbase"},O),b=v(v({},T),k);function A(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter(function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable})),r.push.apply(r,n)}return r}function I(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?A(Object(r),!0).forEach(function(e){(0,n.Z)(t,e,r[e])}):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):A(Object(r)).forEach(function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))})}return t}let P={EXTERNAL:"external",IN_APP:"in_app"},S={NOT_READY:"not_ready",READY:"ready",CONNECTING:"connecting",CONNECTED:"connected",DISCONNECTED:"disconnected",ERRORED:"errored"},_=I(I({},S),{},{ADAPTER_DATA_UPDATED:"adapter_data_updated"});class D extends o.Ue{constructor(){super(...arguments),(0,n.Z)(this,"adapterData",{}),(0,n.Z)(this,"sessionTime",86400),(0,n.Z)(this,"chainConfig",null)}get chainConfigProxy(){return this.chainConfig?I({},this.chainConfig):null}setChainConfig(t){if(this.status===S.READY)return;if(!t.chainNamespace)throw f.notReady("ChainNamespace is required while setting chainConfig");let e=C(t.chainNamespace,t.chainId);this.chainConfig=I(I({},e),t)}setAdapterSettings(t){}checkConnectionRequirements(){if(this.name!==b.WALLET_CONNECT_V1||this.status!==S.CONNECTING){if(this.status===S.CONNECTING)throw f.notReady("Already connecting");if(this.status===S.CONNECTED)throw w.connectionError("Already connected");if(this.status!==S.READY)throw w.connectionError("Wallet adapter is not ready yet, Please wait for init function to resolve before calling connect/connectTo function");if(!this.clientId)throw w.connectionError("Please initialize Web3Auth with a valid clientId in constructor")}}checkInitializationRequirements(){if(this.status!==S.NOT_READY){if(this.status===S.CONNECTED)throw f.notReady("Already connected");if(this.status===S.READY)throw f.notReady("Adapter is already initialized")}}updateAdapterData(t){this.adapterData=t,this.emit(_.ADAPTER_DATA_UPDATED,{adapterName:this.name,data:t})}}let R="https://authjs.web3auth.io";var x=d().getLogger("web3auth-logger");function L(t){let e=!1,r=0,n;try{n=window[t],e=!0,r=n.length;let i="__storage_test__";return n.setItem(i,i),n.removeItem(i),!0}catch(a){return!!(a&&(22===a.code||1014===a.code||"QuotaExceededError"===a.name||"NS_ERROR_DOM_QUOTA_REACHED"===a.name)&&e&&0!==r)}}let M=t=>{let e=(0,l.Z)(t);return!!(!e.exp||e.exp<Math.floor(Date.now()/1e3))},j=async(t,e)=>{let r=await (0,c.v_)(`${R}/siww/get`,{payload:t,header:{t:"solana"===e?"sip99":"eip191"},network:"solana"===e?"solana":"ethereum"});if(!r.success)throw Error("Failed to authenticate user, Please reach out to Web3Auth Support team");return r.challenge},Z=async(t,e,r,n,i,a)=>{let o={signature:{s:e,t:"solana"===t?"sip99":"eip191"},message:r,issuer:n,audience:window.location.hostname,timeout:i},s=await (0,c.v_)(`${R}/siww/verify`,o,{headers:{client_id:a,wallet_provider:n}});if(!s.success)throw x.error("Failed to authenticate user, ,message verification failed",s.error),Error("Failed to authenticate user, ,message verification failed");return s.token},W=(t,e)=>L("localStorage")?localStorage.getItem(`${t.toLowerCase()}_${e}`):null,Y=(t,e,r)=>L("localStorage")?localStorage.setItem(`${t.toLowerCase()}_${e}`,r):null,$=(t,e)=>L("localStorage")?localStorage.removeItem(`${t.toLowerCase()}_${e}`):null;class q extends D{constructor(t){super(),(0,n.Z)(this,"clientId",void 0),this.clientId=t.clientId}async authenticateUser(){var t;if(!this.provider||!(null!==(t=this.chainConfig)&&void 0!==t&&t.chainId))throw w.notConnectedError();let{chainNamespace:e,chainId:r}=this.chainConfig;if(this.status!==S.CONNECTED)throw w.notConnectedError("Not connected with wallet, Please login/connect first");let n=await this.provider.request({method:"eth_accounts"});if(n&&n.length>0){let i=W(n[0],this.name);if(i){let a=M(i);if(!a)return{idToken:i}}let o={domain:window.location.origin,uri:window.location.href,address:n[0],chainId:parseInt(r,16),version:"1",nonce:Math.random().toString(36).slice(2),issuedAt:new Date().toISOString()},s=await j(o,e),c=await this.provider.request({method:"personal_sign",params:[s,n[0]]}),l=await Z(e,c,s,this.name,this.sessionTime,this.clientId);return Y(n[0],this.name,l),{idToken:l}}throw w.notConnectedError("Not connected with wallet, Please login/connect first")}async disconnect(){if(this.status!==S.CONNECTED)throw w.disconnectionError("Not connected with wallet");let t=await this.provider.request({method:"eth_accounts"});t&&t.length>0&&$(t[0],this.name)}}class B extends q{constructor(t){super(t),(0,n.Z)(this,"adapterNamespace",m.EIP155),(0,n.Z)(this,"currentChainNamespace",p.EIP155),(0,n.Z)(this,"type",P.EXTERNAL),(0,n.Z)(this,"name",b.METAMASK),(0,n.Z)(this,"status",S.NOT_READY),(0,n.Z)(this,"rehydrated",!1),(0,n.Z)(this,"metamaskProvider",null),this.chainConfig=(null==t?void 0:t.chainConfig)||null,this.sessionTime=(null==t?void 0:t.sessionTime)||86400}get provider(){return this.status===S.CONNECTED&&this.metamaskProvider?this.metamaskProvider:null}set provider(t){throw Error("Not implemented")}async init(t){if(super.checkInitializationRequirements(),this.metamaskProvider=await a()({mustBeMetaMask:!0}),!this.metamaskProvider)throw f.notInstalled("Metamask extension is not installed");this.status=S.READY,this.emit(_.READY,b.METAMASK);try{x.debug("initializing metamask adapter"),t.autoConnect&&(this.rehydrated=!0,await this.connect())}catch(e){this.emit(_.ERRORED,e)}}setAdapterSettings(t){this.status!==S.READY&&(null!=t&&t.sessionTime&&(this.sessionTime=t.sessionTime),null!=t&&t.clientId&&(this.clientId=t.clientId))}async connect(){if(super.checkConnectionRequirements(),this.chainConfig||(this.chainConfig=C(p.EIP155,1)),this.status=S.CONNECTING,this.emit(_.CONNECTING,{adapter:b.METAMASK}),!this.metamaskProvider)throw w.notConnectedError("Not able to connect with metamask");try{await this.metamaskProvider.request({method:"eth_requestAccounts"});let{chainId:t}=this.metamaskProvider;if(t!==this.chainConfig.chainId&&await this.switchChain(this.chainConfig),this.status=S.CONNECTED,!this.provider)throw w.notConnectedError("Failed to connect with provider");return this.provider.once("disconnect",()=>{this.disconnect()}),this.emit(_.CONNECTED,{adapter:b.METAMASK,reconnected:this.rehydrated}),this.provider}catch(e){throw this.status=S.READY,this.rehydrated=!1,this.emit(_.ERRORED,e),w.connectionError("Failed to login with metamask wallet")}}async disconnect(){var t;let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{cleanup:!1};await super.disconnect(),null===(t=this.provider)||void 0===t||t.removeAllListeners(),e.cleanup?(this.status=S.NOT_READY,this.metamaskProvider=null):this.status=S.READY,this.rehydrated=!1,this.emit(_.DISCONNECTED)}async getUserInfo(){if(this.status!==S.CONNECTED)throw w.notConnectedError("Not connected with wallet, Please login/connect first");return{}}async switchChain(t){if(!this.metamaskProvider)throw w.notConnectedError("Not connected with wallet");try{await this.metamaskProvider.request({method:"wallet_switchEthereumChain",params:[{chainId:t.chainId}]})}catch(e){if(4902===e.code)await this.metamaskProvider.request({method:"wallet_addEthereumChain",params:[{chainId:t.chainId,chainName:t.displayName,rpcUrls:[t.rpcTarget]}]});else throw e}}}}}]);